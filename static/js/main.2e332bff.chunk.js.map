{"version":3,"sources":["Components/Alert.js","Components/Navbar.js","Components/Textform.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","word","alert","className","type","charAt","toUpperCase","slice","msg","Navbar","href","title","id","placeholder","Textform","useState","text","setText","heading","rows","value","onChange","event","target","onClick","newText","showAlert","newTextentered","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","join","length","defaultProps","aboutTexthere","App","setAlert","message","setTimeout","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.2e332bff.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Alert(props) {\r\n\r\n    const capitalize = (word) => {\r\n        return word.charAt(0).toUpperCase() + word.slice(1);\r\n\r\n    }\r\n    return (\r\n\r\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible show\" role=\"alert`}>\r\n            <strong>{capitalize(props.alert.type)}</strong> : {`${props.alert.msg} !`}\r\n            {/* <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button> */}\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import React from 'react'\r\n// import { ReactPropTypes } from 'react';\r\nimport PropTypes from 'prop-types'\r\n// import { a } from 'react-router-dom';\r\n\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand text-warning\" href=\"/\">{props.title}</a>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              {/* <Link className=\" nav-link active\" aria-current=\"page\" href=\"/Textform\">Home</Link> */}\r\n              <a className=\" nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n\r\n            </li>\r\n            {/* <li className=\"nav-item\">\r\n              <a className=\"nav-a\" href=\"/Blogs\">{props.aboutTexthere}</a>\r\n            </li> */}\r\n\r\n          </ul>\r\n          <form className=\"d-flex\">\r\n            <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n            <button className=\"btn btn-outline-warning\" type=\"submit\">Search</button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  aboutTexthere: PropTypes.string.isRequired\r\n}\r\n\r\n// We can set default proptypes also\r\n\r\nNavbar.defaultProps = {\r\n  title: \"Set title here\",\r\n  aboutTexthere: \"about text here\"\r\n}","import React, { useState } from 'react'\r\n// imported useState hooks from react\r\n\r\n// const [text , setText] = useState(\"Enter text here\");\r\n// here text is variable and the setText is function . The \"text\" variable contains default value \"Enter text here\". and always use inside the function\r\n\r\nexport default function Textform(props) {\r\n\r\n\r\n    const forupperCase = () => {\r\n        // console.log('converted to uppercase')\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to Uppercase\", \"success\");\r\n    }\r\n\r\n    const changeClick = (event) => {\r\n        setText(event.target.value);\r\n    }\r\n\r\n    const forlowerCase = () => {\r\n        let newTextentered = text.toLowerCase();\r\n        setText(newTextentered);\r\n        props.showAlert(\"Converted to Lowercase\", \"success\");\r\n\r\n    }\r\n\r\n    const clearText = (event) => {\r\n        let newText = \"\";\r\n        setText(newText);\r\n        props.showAlert(\"Text has been cleared\", \"success\");\r\n\r\n    }\r\n\r\n    const copyText =()=>{\r\n        const text = document.getElementById('myBox');\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n    }\r\n\r\n    const removeExtraSpaces = ()=>{\r\n        const newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"));\r\n    }\r\n\r\n    const [text, setText] = useState(\"Enter text here\");\r\n    // text = \"anythig you want to changedd\";          -----This is wrong way to change the state\r\n    // setText(\"anything you want to change\");   ----right way to change the State\r\n    return (\r\n        <>\r\n            <div>\r\n\r\n                <h1 className='fw-3'>{props.heading} </h1>\r\n                <div className=\" mt-3\">\r\n                    {/* <label for=\"myBox\" className=\"form-label\">Example textarea</label> */}\r\n                    <textarea className=\"form-control\" id=\"myBox\" rows=\"8\" value={text} onChange={changeClick}></textarea>\r\n                </div>\r\n                <div className=\"btn btn-primary mt-4 px-4\" onClick={forupperCase}>Convert to Uppercase</div>\r\n                <div className=\"btn btn-secondary mt-4 px-2 ms-2\" onClick={forlowerCase}>Convert to Lowercase</div>\r\n                <div className=\"btn btn-danger mt-4 px-2 ms-2\" onClick={clearText}>Clear All</div>\r\n                <div className=\"btn btn-info mt-4 px-2 ms-2\" onClick={copyText}>Copy All</div>\r\n                <div className=\"btn btn-info mt-4 px-2 ms-2\" onClick={removeExtraSpaces}>Remove Spaces</div>\r\n\r\n\r\n\r\n\r\n            </div>\r\n\r\n            <div className=\"container mt-5\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-6\">\r\n                        <h4>Your Text Summary...</h4>\r\n                        <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n                        <h4>Time taken</h4>\r\n                        <p>{0.008 * text.split(\"\").length} Minutes to read</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n","// import logo from './logo.svg';\nimport './App.css';\nimport Alert from './Components/Alert';\nimport Navbar from './Components/Navbar';\nimport Textform from './Components/Textform';\nimport React, { useState } from 'react';\n// import Blogs from './Components/Blogs';\n\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   Link  \n// } from \"react-router-dom\"\n\nfunction App() {\n\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 2000);\n  }\n\n  return (\n    <>\n      {/* <Router> */}\n        {/* this is default we have not sent any props yet */}\n        {/* <Navbar />    */}\n\n        {/*this is with the use of props  */}\n        <Navbar title=\"Simple Editor\" aboutTexthere=\"Blogs\" />\n\n        <Alert alert={alert} />\n        <div className=\"container mt-3\">\n\n          {/* <Switch> */}\n            {/* <Route path=\"/Textform\"> */}\n              <Textform showAlert={showAlert} heading=\"Enter the text to Analyze\" />\n            {/* </Route> */}\n\n            {/* <Route path=\"/Blogs\">\n              <Blogs />\n            </Route>\n          </Switch> */}\n        </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}